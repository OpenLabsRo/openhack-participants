openapi: 3.0.3
info:
  title: OpenHack Backend API
  description: Backend API for OpenHack handling participant accounts, teams, feature
    flags, and superuser check-in tooling.
  version: 25.09.11.2
servers:
- url: /
tags:
- name: General
- name: Accounts
- name: Teams
- name: Superusers
paths:
  /ping:
    get:
      tags:
      - General
      summary: Health check
      responses:
        '200':
          description: Service is reachable.
          content:
            text/plain:
              schema:
                type: string
              example: PONG
  /version:
    get:
      tags:
      - General
      summary: Current deployment version
      responses:
        '200':
          description: Semantic version string loaded from .VERSION.
          content:
            text/plain:
              schema:
                type: string
              example: 25.09.11.2
  /testflags:
    get:
      tags:
      - General
      summary: Feature flag guard probe
      description: Succeeds only when required feature flags are enabled.
      responses:
        '204':
          description: Flags check passed.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                flagRequired:
                  summary: Required feature flag missing
                  value:
                    message: this feature is not available right now
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /accounts/ping:
    get:
      tags:
      - Accounts
      summary: Accounts service health check
      responses:
        '200':
          description: Accounts subsystem reachable.
          content:
            text/plain:
              schema:
                type: string
              example: PONG
  /accounts/whoami:
    get:
      tags:
      - Accounts
      summary: Get current account profile
      security:
      - AccountAuth: []
      responses:
        '200':
          description: Account resolved from the bearer token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
  /accounts/check:
    post:
      tags:
      - Accounts
      summary: Check if an initialized account has completed registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCheckRequest'
      responses:
        '200':
          description: Account exists; indicates whether a password was set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCheckResponse'
        '404':
          description: Account not initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNotInitialized:
                  summary: Account not initialized
                  value:
                    message: account not initialized - talk to the administrator
  /accounts/register:
    post:
      tags:
      - Accounts
      summary: Complete participant registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
      responses:
        '200':
          description: Account registered and authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTokenResponse'
        '404':
          description: Account not initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNotInitialized:
                  summary: Account not initialized
                  value:
                    message: account not initialized - talk to the administrator
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountAlreadyRegistered:
                  summary: Account already registered
                  value:
                    message: account already registered
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /accounts/login:
    post:
      tags:
      - Accounts
      summary: Authenticate a participant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
      responses:
        '200':
          description: Login succeeded; a new session token is issued.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTokenResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountLoginWrongPassword:
                  summary: Wrong password provided
                  value:
                    message: wrong password
        '404':
          description: Account not initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNotInitialized:
                  summary: Account not initialized
                  value:
                    message: account not initialized - talk to the administrator
  /accounts:
    patch:
      tags:
      - Accounts
      summary: Update the display name of the current account
      security:
      - AccountAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountEditRequest'
      responses:
        '200':
          description: Name updated; a refreshed token is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTokenResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /accounts/flags:
    get:
      tags:
      - Accounts
      summary: Retrieve current feature flags visible to participants
      security:
      - AccountAuth: []
      responses:
        '200':
          description: Current flag assignments and active stage.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flags'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/ping:
    get:
      tags:
      - Teams
      summary: Teams service health check
      responses:
        '200':
          description: Teams subsystem reachable.
          content:
            text/plain:
              schema:
                type: string
              example: PONG
  /teams:
    get:
      tags:
      - Teams
      summary: Fetch the team for the authenticated account
      security:
      - AccountAuth: []
      responses:
        '200':
          description: Team details including submission metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountHasNoTeam:
                  summary: Account not associated with any team
                  value:
                    message: account does not belong to a team
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    post:
      tags:
      - Teams
      summary: Create a new team led by the authenticated account
      description: Request body is optional; defaults are applied server-side.
      security:
      - AccountAuth: []
      responses:
        '200':
          description: Team created and the caller receives a refreshed token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTokenResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountAlreadyHasTeam:
                  summary: Account already assigned to a team
                  value:
                    message: account already has a team
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    patch:
      tags:
      - Teams
      summary: Rename the current team
      security:
      - AccountAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRenameRequest'
      responses:
        '200':
          description: Updated team document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountHasNoTeam:
                  summary: Account not associated with any team
                  value:
                    message: account does not belong to a team
        '404':
          description: Team not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                teamNotFound:
                  summary: Requested team not found
                  value:
                    message: team  not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    delete:
      tags:
      - Teams
      summary: Delete the current team (only when the caller is the last member)
      security:
      - AccountAuth: []
      responses:
        '200':
          description: Team marked deleted; caller receives a refreshed token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTokenResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                teamNotEmpty:
                  summary: Team still has multiple members
                  value:
                    message: team is not empty
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/members:
    get:
      tags:
      - Teams
      summary: List team members for the authenticated account
      security:
      - AccountAuth: []
      responses:
        '200':
          description: Cached list of team members.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountHasNoTeam:
                  summary: Account not associated with any team
                  value:
                    message: account does not belong to a team
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/join:
    patch:
      tags:
      - Teams
      summary: Join an existing team by ID
      security:
      - AccountAuth: []
      parameters:
      - $ref: '#/components/parameters/TeamIdQuery'
      responses:
        '200':
          description: Account added to the team; refreshed token and member roster returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMembersResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '404':
          description: Team not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                teamNotFound:
                  summary: Requested team not found
                  value:
                    message: team  not found
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountAlreadyHasTeam:
                  summary: Account already assigned to a team
                  value:
                    message: account already has a team
                teamFull:
                  summary: Team already has maximum members
                  value:
                    message: team is full
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/leave:
    patch:
      tags:
      - Teams
      summary: Leave the current team
      security:
      - AccountAuth: []
      responses:
        '200':
          description: Account removed from the team; refreshed token and remaining member roster returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMembersResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '404':
          description: Team not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                teamNotFound:
                  summary: Requested team not found
                  value:
                    message: team  not found
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountHasNoTeam:
                  summary: Account not associated with any team
                  value:
                    message: account does not belong to a team
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/kick:
    patch:
      tags:
      - Teams
      summary: Remove a teammate by account ID
      security:
      - AccountAuth: []
      parameters:
      - $ref: '#/components/parameters/AccountIdQuery'
      responses:
        '200':
          description: Member removed; returns the updated member roster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembersResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNotFound:
                  summary: Account record not found
                  value:
                    message: account not found
                teamNotFound:
                  summary: Requested team not found
                  value:
                    message: team  not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/submissions/name:
    patch:
      tags:
      - Teams
      summary: Update the team submission name
      security:
      - AccountAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionNameRequest'
      responses:
        '200':
          description: Updated team snapshot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountHasNoTeam:
                  summary: Account not associated with any team
                  value:
                    message: account does not belong to a team
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/submissions/desc:
    patch:
      tags:
      - Teams
      summary: Update the team submission desc
      security:
      - AccountAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionDescRequest'
      responses:
        '200':
          description: Updated team snapshot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountHasNoTeam:
                  summary: Account not associated with any team
                  value:
                    message: account does not belong to a team
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/submissions/repo:
    patch:
      tags:
      - Teams
      summary: Update the team submission repo
      security:
      - AccountAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionRepoRequest'
      responses:
        '200':
          description: Updated team snapshot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountHasNoTeam:
                  summary: Account not associated with any team
                  value:
                    message: account does not belong to a team
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /teams/submissions/pres:
    patch:
      tags:
      - Teams
      summary: Update the team submission presentation
      security:
      - AccountAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionPresRequest'
      responses:
        '200':
          description: Updated team snapshot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNoToken:
                  summary: Missing account bearer token
                  value:
                    message: you are not logged in
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountHasNoTeam:
                  summary: Account not associated with any team
                  value:
                    message: account does not belong to a team
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/ping:
    get:
      tags:
      - Superusers
      summary: Superuser service health check
      responses:
        '200':
          description: Superuser subsystem reachable.
          content:
            text/plain:
              schema:
                type: string
              example: PONG
  /superusers/whoami:
    get:
      tags:
      - Superusers
      summary: Inspect the current superuser context
      security:
      - SuperUserAuth: []
      responses:
        '200':
          description: Authenticated superuser profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperUserContext'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
  /superusers/login:
    post:
      tags:
      - Superusers
      summary: Authenticate a superuser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuperUserLoginRequest'
      responses:
        '200':
          description: Login succeeded; a superuser JWT is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperUserLoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountLoginWrongPassword:
                  summary: Wrong password provided
                  value:
                    message: wrong password
        '404':
          description: Superuser not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNotExists:
                  summary: Superuser credentials unknown
                  value:
                    message: superuser does not exist
  /superusers/accounts/initialize:
    post:
      tags:
      - Superusers
      summary: Initialize an account shell for a participant
      security:
      - SuperUserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInitializeRequest'
      responses:
        '200':
          description: Account created without credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountAlreadyInitialized:
                  summary: Account already initialized by staff
                  value:
                    message: account already initialized
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/flags:
    get:
      tags:
      - Superusers
      summary: Retrieve global feature flags
      security:
      - SuperUserAuth: []
      responses:
        '200':
          description: Feature flags with active stage metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flags'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    post:
      tags:
      - Superusers
      summary: Toggle a single feature flag
      security:
      - SuperUserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagSetRequest'
      responses:
        '200':
          description: Updated flag map.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagAssignments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    put:
      tags:
      - Superusers
      summary: Bulk update feature flags
      security:
      - SuperUserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagAssignments'
      responses:
        '200':
          description: Updated flag map.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagAssignments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    delete:
      tags:
      - Superusers
      summary: Remove a feature flag entry
      security:
      - SuperUserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagUnsetRequest'
      responses:
        '200':
          description: Updated flag map.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagAssignments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/flags/reset:
    put:
      tags:
      - Superusers
      summary: Reset all feature flags to false
      security:
      - SuperUserAuth: []
      responses:
        '200':
          description: Updated flag map with all entries disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagAssignments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/flags/test:
    get:
      tags:
      - Superusers
      summary: Validate that the current JWT satisfies flag middleware
      security:
      - SuperUserAuth: []
      responses:
        '200':
          description: Flags satisfied.
          content:
            text/plain:
              schema:
                type: string
              example: it passed
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
                flagRequired:
                  summary: Required feature flag missing
                  value:
                    message: this feature is not available right now
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/flags/stages:
    get:
      tags:
      - Superusers
      summary: List available flag stages
      security:
      - SuperUserAuth: []
      responses:
        '200':
          description: Ordered list of predefined flag stages.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlagStage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    post:
      tags:
      - Superusers
      summary: Create a new flag stage
      security:
      - SuperUserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagStageCreateRequest'
      responses:
        '200':
          description: Newly created flag stage.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    delete:
      tags:
      - Superusers
      summary: Delete an existing flag stage
      security:
      - SuperUserAuth: []
      parameters:
      - $ref: '#/components/parameters/FlagStageIdQuery'
      responses:
        '200':
          description: Deleted flag stage.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/flags/stages/execute:
    post:
      tags:
      - Superusers
      summary: Apply a flag stage
      security:
      - SuperUserAuth: []
      parameters:
      - $ref: '#/components/parameters/FlagStageIdQuery'
      responses:
        '200':
          description: Updated flags after executing the stage.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flags'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '404':
          description: Flag stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                flagStageNotFound:
                  summary: Flag stage not found
                  value:
                    message: flag stage not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/checkin/badges:
    get:
      tags:
      - Superusers
      summary: Retrieve badge pile assignments for all accounts
      security:
      - SuperUserAuth: []
      responses:
        '200':
          description: Accounts bucketed into badge piles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadgePilesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/checkin/tags:
    get:
      tags:
      - Superusers
      summary: Fetch a check-in tag by ID
      security:
      - SuperUserAuth: []
      parameters:
      - $ref: '#/components/parameters/TagIdQuery'
      responses:
        '200':
          description: Tag data from cache or MongoDB.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '404':
          description: Tag not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                tagNotFound:
                  summary: Check-in tag not found
                  value:
                    message: tag not found
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                tagIncomplete:
                  summary: Tag request missing required fields
                  value:
                    message: tag data is incomplete
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
    post:
      tags:
      - Superusers
      summary: Assign a tag to an account
      security:
      - SuperUserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssignRequest'
      responses:
        '200':
          description: Persisted tag mapping.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                tagIncomplete:
                  summary: Tag request missing required fields
                  value:
                    message: tag data is incomplete
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                internalServerError:
                  summary: Unexpected backend failure
                  value:
                    message: 'internal server error: <details>'
  /superusers/checkin/scan:
    post:
      tags:
      - Superusers
      summary: Scan a participant badge at check-in
      security:
      - SuperUserAuth: []
      parameters:
      - $ref: '#/components/parameters/AccountIdQuery'
      responses:
        '200':
          description: Account details with computed badge pile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInScanResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                superUserNoToken:
                  summary: Missing or invalid superuser token
                  value:
                    message: no token has been provided
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNotFound:
                  summary: Account record not found
                  value:
                    message: account not found
components:
  securitySchemes:
    AccountAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Account token issued by /accounts/login or /accounts/register.
    SuperUserAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Superuser token issued by /superusers/login.
  parameters:
    TeamIdQuery:
      name: id
      in: query
      required: true
      description: Team identifier.
      schema:
        type: string
    AccountIdQuery:
      name: id
      in: query
      required: true
      description: Account identifier.
      schema:
        type: string
    FlagStageIdQuery:
      name: id
      in: query
      required: true
      description: Flag stage identifier.
      schema:
        type: string
    TagIdQuery:
      name: id
      in: query
      required: true
      description: Tag identifier.
      schema:
        type: string
  responses:
    Error:
      description: Error response payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    Account:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          description: Bcrypt hash when returned by the API.
        name:
          type: string
        teamID:
          type: string
          nullable: true
      required:
      - id
      - email
    AccountCheckRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    AccountCheckResponse:
      type: object
      properties:
        registered:
          type: boolean
      required:
      - registered
    CredentialRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
      - email
      - password
    AccountTokenResponse:
      type: object
      properties:
        token:
          type: string
        account:
          $ref: '#/components/schemas/Account'
      required:
      - token
      - account
    AccountMembersResponse:
      type: object
      properties:
        token:
          type: string
        account:
          $ref: '#/components/schemas/Account'
        members:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      required:
      - token
      - account
      - members
    AccountEditRequest:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    Flags:
      type: object
      properties:
        flags:
          $ref: '#/components/schemas/FlagAssignments'
        stage:
          $ref: '#/components/schemas/FlagStage'
      required:
      - flags
    FlagAssignments:
      type: object
      additionalProperties:
        type: boolean
    FlagStage:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        turnoff:
          type: array
          items:
            type: string
        turnon:
          type: array
          items:
            type: string
      required:
      - id
      - name
      - turnoff
      - turnon
    FlagStageCreateRequest:
      type: object
      properties:
        name:
          type: string
        turnoff:
          type: array
          items:
            type: string
        turnon:
          type: array
          items:
            type: string
      required:
      - name
    FlagSetRequest:
      type: object
      properties:
        flag:
          type: string
        value:
          type: boolean
      required:
      - flag
      - value
    FlagUnsetRequest:
      type: object
      properties:
        flag:
          type: string
      required:
      - flag
    Team:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        members:
          type: array
          items:
            type: string
        submission:
          $ref: '#/components/schemas/TeamSubmission'
        deleted:
          type: boolean
      required:
      - id
      - name
      - members
      - submission
      - deleted
    TeamMembersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      required:
      - members
    TeamSubmission:
      type: object
      properties:
        name:
          type: string
        desc:
          type: string
        repo:
          type: string
          description: Repository URL or reference.
        pres:
          type: string
          description: Presentation URL or reference.
    TeamRenameRequest:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    SubmissionNameRequest:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    SubmissionDescRequest:
      type: object
      properties:
        desc:
          type: string
      required:
      - desc
    SubmissionRepoRequest:
      type: object
      properties:
        repo:
          type: string
      required:
      - repo
    SubmissionPresRequest:
      type: object
      properties:
        pres:
          type: string
      required:
      - pres
    SuperUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        permissions:
          type: array
          items:
            type: string
      required:
      - username
      - permissions
    SuperUserContext:
      type: object
      properties:
        superuser:
          $ref: '#/components/schemas/SuperUser'
      required:
      - superuser
    SuperUserLoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
      required:
      - username
      - password
    SuperUserLoginResponse:
      type: object
      properties:
        token:
          type: string
        superuser:
          $ref: '#/components/schemas/SuperUser'
      required:
      - token
      - superuser
    AccountInitializeRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
      required:
      - email
      - name
    Tag:
      type: object
      properties:
        id:
          type: string
        accountID:
          type: string
      required:
      - id
    TagAssignRequest:
      type: object
      properties:
        id:
          type: string
        accountID:
          type: string
      required:
      - id
      - accountID
    CheckInScanResponse:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        pile:
          type: integer
          format: int32
      required:
      - account
      - pile
    BadgePilesResponse:
      type: array
      description: Each entry represents a badge pile containing participant accounts.
      items:
        type: array
        items:
          $ref: '#/components/schemas/Account'
